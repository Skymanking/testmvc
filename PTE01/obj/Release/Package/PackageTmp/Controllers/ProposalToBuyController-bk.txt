using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Model.Dao;
using PagedList;
using Model.Code;
using Model.EF;
using Model.View;
using ShopOnline1.Areas.Admin.Controllers;
using System.IO;
using Model.Dao3;
using Model.EF3;
using Model.EFFASTKHO;
using Model.DaoFASTKHO;
using System.Web.Script.Serialization;
using Model.ERP;

namespace PTE01.Controllers
{
    public class ProposalToBuyController : BaseController
    {
        public ActionResult eCreateProTask(string idpro, int idtask)
        {
            var model = new SI_ItemsDao().TOP10("ABS");
            ViewBag.listtemp = model;
            ViewBag.idpro = idpro;
            if(idtask==0)
            { ViewBag.listitem = new eProjectDao().ListResource(idpro); }
            else
            { ViewBag.listitem = new eProjectDao().ListResource(idpro, idtask);  }
           

            return View();
        }

        public ActionResult Index(string searchString, int page = 1, int pageSize = 20)
        {
            Session["CurrentLink"] = HttpContext.Request.Url.AbsoluteUri;
            var dao = new ProposalToBuyDao();
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            IEnumerable<ProposalToBuyView1> model = null;
           
            if (session.Level == "Giám Đốc" || session.DeID == 1)
            { model = dao.ViewListPage12(searchString, page, pageSize); }
            else
            {
                if (session.DeID == 5 || session.DeID == 12 || session.Level == "Thủ Kho" || session.Level == "Quản Trị")
                {
                    model = dao.ViewListPage14(searchString, page, pageSize);
                }
                else
                {
                    if (session.Level == "Trưởng Phòng")
                    { model = dao.ViewListDepartment(searchString, page, pageSize, session.UserName); }
                    else
                    {
                        if (session.Level == "PGD")
                        { model = dao.ViewListPageDepartment(searchString, page, pageSize, session.UserName); }
                        else
                        { model = dao.ViewListPage13(searchString, page, pageSize, session.UserName); }
                        
                    }
                }

            }
            foreach (var item in model)
            {
                item.Image = new UserDao().GetImage(item.CreateBy);
            }
            ViewBag.SearchString = searchString;
            return View(model);
        }
        public ActionResult SearchAdvance1(string tbpduyet, string pgdduyet, string gdduyet, string mhduyet, string gdduyetg, string ngay1, string ngay2, string searchString)
        {
            Session["CurrentLink"] = HttpContext.Request.Url.AbsoluteUri;
            var dao = new ProposalToBuyDao();
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            IEnumerable<ProposalToBuyView1> model = null;
            if ((tbpduyet == null || tbpduyet == "null") && (pgdduyet == null || pgdduyet == "null") && (gdduyet == null || gdduyet == "null") && (mhduyet == null || mhduyet == "null") && (gdduyetg == null || gdduyetg == "null") && (ngay1 == null || ngay1 == "") && (ngay2 == null || ngay2 == "") && (searchString == null || searchString == ""))
            { model = null; }
            else
            {
                model = dao.SearchAdvance(session.UserName, tbpduyet, pgdduyet, gdduyet, mhduyet, gdduyetg, ngay1, ngay2, searchString);      
            }
                  
            ViewBag.SearchString = searchString;
            return View(model);
        }
        public ActionResult SearchAdvanceBuy(string damua, string danhap, string tiendo, string ngay1, string ngay2, string searchString)
        {
            Session["CurrentLink"] = HttpContext.Request.Url.AbsoluteUri;
            var dao = new ProposalToBuyDao();
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            IEnumerable<ProposalToBuyView2> model = null;
            if ((damua == null || damua == "null") && (danhap == null || danhap == "null") && (tiendo == null || tiendo == "null")  && (ngay1 == null || ngay1 == "") && (ngay2 == null || ngay2 == "") && (searchString == null || searchString == ""))
            { model = null; }
            else
            {
                model = dao.SearchAdvanceBuy(damua, danhap, tiendo,  ngay1, ngay2, searchString);
            }

            ViewBag.SearchString = searchString;
            return View(model);
        }
        public ActionResult SearchAdvanceCost(string nguoitao, string loaic, string cost1, string cost2, string ngay1, string ngay2)
        {
            Session["CurrentLink"] = HttpContext.Request.Url.AbsoluteUri;
            var dao = new ProposalToBuyDao();
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var maNV = new UserDao().ViewDetail(session.UserName).CodeID;
            var checkeditcost = new PermissionDao().CheckUser("EditCostinPTB", session.UserName);
            IEnumerable<ProposalToBuyView5> model = null;
            if ((nguoitao == null || nguoitao == "null") && (loaic == null || loaic == "null") && (cost1 == null || cost1 == "null") && (cost2 == null || cost2 == "null") && (ngay1 == null || ngay1 == "") && (ngay2 == null || ngay2 == "") )
            { model = null; }
            else
            {
                model = dao.SearchAdvanceCost(nguoitao, loaic, cost1, cost2, ngay1, ngay2);
            }
            //ViewBag.cProject = new ProjectDao().ListforUser(session.UserName);
            //ViewBag.cCenter = new CostCenterDao().ListAll();
            ViewBag.cProject1 = new ProjectDao().ListforUser1(session.UserName);
            ViewBag.cProject2 = new ProjectDao().ListforUser2(session.UserName);
            ViewBag.cCenter1 = new PersonalGroupDao().CostCenter2(maNV);
            if (checkeditcost)
            {
                ViewBag.cCenter2 = new PersonalGroupDao().ListAllCostCenter2();
                ViewBag.cUser = new UserDao().ListAllUser3();
            }
            else 
            {
                ViewBag.cCenter2 = new PersonalGroupDao().ListCostCenter2(maNV);
                ViewBag.cUser = new UserDao().MyNV(maNV);
            }    
            ViewBag.cElement = new CostElementDao().ListAll();            
            return View(model);
        }
        public ActionResult ExportToPO(string nguoitao, string mancc, string ngay1, string ngay2)
        {
            Session["CurrentLink"] = HttpContext.Request.Url.AbsoluteUri;
            var dao = new ProposalToBuyDao();
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var maNV = new UserDao().ViewDetail(session.UserName).CodeID;
            //var checkeditcost = new PermissionDao().CheckUser("EditCostinPTB", session.UserName);
            IEnumerable<ERPPTB1> model = null;
            if ((nguoitao == null || nguoitao == "null") && (mancc == null || mancc == "null")  && (ngay1 == null || ngay1 == "") && (ngay2 == null || ngay2 == ""))
            { model = null; }
            else
            {
                model = dao.ExportToPO(nguoitao, mancc, ngay1, ngay2);
            }
            ViewBag.cUser = new UserDao().ListAllUser3();
            ViewBag.cVendor = new VendorDao().ListAll();            
            return View(model);
        }
       
        [HttpPost]
        public ActionResult Upload(string baseData)
        {
            if (HttpContext.Request.Files.AllKeys.Any())
            {
                for (int i = 0; i <= HttpContext.Request.Files.Count; i++)
                {
                    var file = HttpContext.Request.Files["files" + i];
                    if (file != null)
                    {
                        var fileSavePath = Path.Combine(Server.MapPath("/App_Data/uploads/"), file.FileName);
                        file.SaveAs(fileSavePath);
                    }
                }
            }
            return View();
        }

        public FileResult DownloadFile(string filename)
        {
            string mapfile = Server.MapPath("/App_Data/uploads/");
            byte[] fileBytes = System.IO.File.ReadAllBytes(mapfile + filename);
            return File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, filename);
        }
        public ActionResult View(long id)
        {
            Session["CurrentLink"] = HttpContext.Request.Url.AbsoluteUri;
            var dao3 = new FullPTB();
            FullPTB item = dao3.GetDetail(id);
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            bool quyenxemgia = false;
            if (session.DeID == 5 ||session.DeID == 6||session.DeID == 12)
            {
                quyenxemgia = true;
            }
            ViewBag.quyenxemgia = quyenxemgia;
            var owner = new UserDao();
            ViewBag.detail = item;
            ViewBag.ngtao = owner.ViewInfo1(item.item.CreateBy);

            return View();
        }
        public ActionResult TraCuuItem(string searchString=null)
        {
            var model = new SI_ItemsDao().TOP10(searchString);
            return View(model);
        }
       
        public ActionResult Buy(string searchString, int page = 1, int pageSize = 50)
        {
            Session["CurrentLink"] = HttpContext.Request.Url.AbsoluteUri;
            var dao = new ProposalToBuyDao();
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            IEnumerable<ProposalToBuyView2> model = null;
            if (session.DeID != 12 && session.DeID != 6 && session.Level != "Thủ Kho" && session.Level != "Quản Trị" && session.DeID != 5)
            { model = dao.ViewListPage21(searchString, page, pageSize, session.DeID); }
            else { model = dao.ViewListPage22(searchString, page, pageSize); }
            ViewBag.SearchString = searchString;
            return View(model);
        }
        public ActionResult WaitImport(string searchString, string ngay)
        {
            Session["CurrentLink"] = HttpContext.Request.Url.AbsoluteUri;
            var dao = new ProposalToBuyDao();
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            IEnumerable<ProposalToBuyView3> model = null;
            //if (session.DeID != 12 && session.DeID != 6 && session.Level != "Thủ Kho" && session.Level != "Quản Trị" && session.DeID != 5)
            //{ model = dao.WaitImport(DateTime.Now); }
            //else { model = dao.ViewListPage22(searchString, page, pageSize); }
            DateTime ngaynhap = Convert.ToDateTime(ngay);
            model = dao.WaitImport(ngaynhap, searchString);
            ViewBag.ngay = ngay;
            return View(model);
        }
        public ActionResult Report1(int month, int year)
        {
            Session["CurrentLink"] = HttpContext.Request.Url.AbsoluteUri;
            var dao = new ProposalToBuyDao();
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            IEnumerable<ReportBuy1> model = null;
            model = dao.ViewReport(month,year);
            return View(model);
        }
        public ActionResult ReportBuy()
        {
            return View();
        }
        [HttpGet]
        public ActionResult Create()
        {
            
            return View();
        }
        public ActionResult Create1()
        {
            var model = new SI_ItemsDao().TOP10("ABS");
            ViewBag.listtemp = model;
            return View();
        }
        public ActionResult Create(FullPTB a)
        {
            a.item.Type = "new";
            a.item.Status = true;
            var dao1 = new ProposalToBuyDao();
            var dao2 = new DetailPTBDao();
            var stt = 1;
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var myCost = new UserDao().MyCostCenter(session.UserName).Name;
            double id;
            string uTBP = new UserDao().GetmyTBP(session.UserName);
            var userT = new UserDao().GetInfoSendMailUser(uTBP);
            var userM = new UserDao().GetInfoSendMailUser(session.UserName);
            var mail = new SendEmail();
            if (session.Level == "Giám Đốc")
            { id = dao1.BOSSInsert(a.item, session.UserName); }
            else
            {
                if (session.Level == "Trưởng Phòng" || session.Level == "Phó Giám Đốc")
                {
                    id = dao1.HODInsert(a.item, session.UserName);
                    mail.Send("cuong.tong","system@pte.vn", "cuong.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userM.FullName + " -Bộ Phận " + userM.DepartmentName + " vừa yêu cầu mua vật tư với lý do (" + a.item.Reason + "), vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                }
                else
                {
                    id = dao1.Insert(a.item, session.UserName);
                    mail.Send(uTBP,"system@pte.vn", userT.Email, "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Gửi anh/chị " + userT.FullName + " . Nhân Viên: " + userM.FullName + " thuộc bộ phận " + userM.DepartmentName + " Đã yêu cầu mua vật tư với lý do(" + a.item.Reason + "), vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                }
            }
           

            foreach (var d in a.detail)
            {

                if (d.ItemID != null && d.ItemID !="")
                {
                        d.ID = a.item.ID;
                        d.No = stt;
                        if (d.LinkType1 == null)
                        {
                            d.LinkType1 = "C";
                            d.ID01 = myCost;
                        }
                        dao2.Insert(d);
                        stt++;                    
                }
            }
            if (id > 0)
            {
                return Redirect(Session["CurrentLink"].ToString());
            }
            else
            {
                ModelState.AddModelError("", "Thêm không thành công");
            }

            return Redirect(Session["CurrentLink"].ToString());
        }
        public ActionResult Edit(long id)
        {
            var dao3 = new FullPTB();
            FullPTB item = dao3.GetDetail(id);

            var owner = new UserDao();
            ViewBag.ngtao = owner.ViewInfo1(item.item.CreateBy);

            return View(item);
        }
        public ActionResult Edit2(long id)
        {
            var dao3 = new FullPTB();
            FullPTB item = dao3.GetDetail(id);

            var owner = new UserDao();
            ViewBag.ngtao = owner.ViewInfo1(item.item.CreateBy);

            return View(item);
        }
        public ActionResult Edit1(long id)
        {
            var dao3 = new FullPTB();
            FullPTB item = dao3.GetDetail(id);
            List<ItemPrice2> histItemP = new List<ItemPrice2>();
            foreach (var temp in item.detail)
            {
                var dao = new ItemPriceDao().ViewHistory(temp.ItemID);
                //if (dao.Count>0)
                //{
                //    //foreach (var temp2 in dao)
                //    //{ histItemP.Add(temp2); }
                    histItemP = histItemP.Concat(dao).ToList();
                //}
                
            }
           
            ViewBag.histItemP = histItemP;
            var owner = new UserDao();
            ViewBag.ngtao = owner.ViewInfo1(item.item.CreateBy);

            return View(item);
        }
        public ActionResult EditA1(long id)
        {
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var maNV = new UserDao().ViewDetail(session.UserName).CodeID;
            var checkeditcost = new PermissionDao().CheckUser("EditCostinPTB", session.UserName);
            var dao3 = new FullPTB();
            FullPTB item = dao3.GetDetail(id);
            List<ItemPrice2> histItemP = new List<ItemPrice2>();
            
            foreach (var temp in item.detail)
            {
                var dao = new ItemPriceDao().ViewHistory(temp.ItemID);
                histItemP = histItemP.Concat(dao).ToList();
            }
            //ViewBag.cProject = new ProjectDao().ListforUser(session.UserName);
            ViewBag.cProject1 = new ProjectDao().ListforUser1(session.UserName);
            ViewBag.cProject2 = new ProjectDao().ListforUser2(session.UserName);
            //ViewBag.cCenter = new CostCenterDao().ListAll();
            ViewBag.cCenter1 = new PersonalGroupDao().CostCenter(maNV);
            if (checkeditcost)
            { ViewBag.cCenter2 = new PersonalGroupDao().ListAllCostCenter(); }
            else { ViewBag.cCenter2 = new PersonalGroupDao().ListCostCenter(maNV); }  
            ViewBag.cElement = new CostElementDao().ListAll();
            ViewBag.histItemP = histItemP;
            var owner = new UserDao();
            ViewBag.ngtao = owner.ViewInfo1(item.item.CreateBy);

            return View(item);
        }
        [HttpPost]
        public ActionResult Edit(FullPTB a)
        {
            var dao1 = new ProposalToBuyDao();
            var dao2 = new DetailPTBDao();
            var ngtao = new ProposalToBuyDao().ViewDetail(a.item.ID).CreateBy;
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var checkduyetmua1 = new PermissionDao().CheckUser("ApprovalBuy", session.UserName);
            var checkduyetmua2 = new PermissionDao().CheckUser("AuthApprovePur", session.UserName);
            var checkTBP = new UserDao().GetHODUser(session.UserName, ngtao);

            bool res = false;
            var stt = 1;
            //Duyệt Mua và Duyệt Giá
            if (session.Level == "Giám Đốc" || checkduyetmua1==true || checkduyetmua2==true)
            {
                res = dao1.BOSSUpdate(a.item,session.UserName);
                if (a.item.BOSSApproval1 == true && a.item.BOSSApproval == false)
                {
                    var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                    var mail = new SendEmail();
                    //mail.Send("tien.tong","system@pte.vn", "tien.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi Bộ Phận Mua Hàng Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " -  Bộ Phận Giám Đốc vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                    //mail.Send("linh.duong", "system@pte.vn", "linh.duong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi Bộ Phận Mua Hàng Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " -  Bộ Phận Giám Đốc vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                }
            }
            // Mua hàng duyệt
            if (session.DeID == 12)
            {
                res = dao1.PDUpdate(a.item, session.UserName);
                var temp = a.detail;
                dao2.Delete(a.item.ID);
                foreach (var d in temp)
                {
                    if (d.ItemID != null && d.ItemID != "" && d.MaterialName != null && d.MaterialName != "")
                    {
                        d.ID = a.item.ID;
                        d.No = stt;
                        dao2.Insert(d);
                        stt++;
                    }

                }
                if (a.item.PDApproval == true && a.item.HODApproval == true && a.item.BOSSApproval1 == true)
                {
                    var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                    var mail = new SendEmail();

                    mail.Send("cuong.tong","system@pte.vn", "cuong.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " -  Bộ Phận Mua Hàng vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                }
            }
            // Trưởng Phòng duyệt
            if (session.Level == "Trưởng Phòng")
            {

                var BossPer = new UserDao().ViewDetail(session.UserName).BossPer;
                if (checkTBP)
                { res = dao1.HODUpdate(a.item, session.UserName); }                
                if(BossPer!=null)
                {
                    if(BossPer=="cuong.tong")
                    {
                        if (a.item.HODApproval == true && a.item.BOSSApproval1 == false)
                        {
                            var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                            var mail = new SendEmail();
                            mail.Send("cuong.tong", "system@pte.vn", "cuong.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " - Trưởng Bộ Phận " + userT.DepartmentName + " vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                        }
                    }
                    else
                    {
                        if (a.item.HODApproval == true && a.item.BGDApproval == false)
                        {
                            var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                            var userB = new UserDao().GetInfoSendMailUser(BossPer);
                            var mail = new SendEmail();
                            mail.Send(BossPer,"system@pte.vn", userB.Email, "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " - Trưởng Bộ Phận " + userT.DepartmentName + " vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn/ProposalToBuy/Edit2/" + a.item.ID+ " để xem xét");
                        }
                    }
                }
               
            }
            //PGD duyệt

            if (session.Level == "PGD")
            {
                if (new UserDao().MyTBPorBGD(session.UserName, ngtao))
                { res = dao1.BGDUpdate(a.item, session.UserName); }
                if (a.item.BGDApproval == true && a.item.BOSSApproval1 == false)
                {
                    var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                    var mail = new SendEmail();

                    mail.Send("cuong.tong", "system@pte.vn", "cuong.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " - Quản Lý Bộ Phận " + userT.DepartmentName + " vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                }
            }
            // chinh sua cac thong tin con lai
            if (session.Level != "Giám Đốc")
            {
                res = dao1.StaffUpdate(a.item,session.UserName);
                if (a.item.BGDApproval == true || a.item.HODApproval == true || a.item.BOSSApproval == true || a.item.BOSSApproval1 == true)
                { return RedirectToAction("Index", "ProposalToBuy"); }
                else
                {
                    var temp = a.detail;
                    dao2.Delete(a.item.ID);
                    foreach (var d in temp)
                    {
                        if (d.ItemID != null && d.ItemID != "" && d.MaterialName != null && d.MaterialName != "")
                        {
                            d.ID = a.item.ID;
                            d.No = stt;
                            dao2.Insert(d);
                            stt++;
                        }

                    }
                }
            }

            return Redirect(Session["CurrentLink"].ToString());
        }
        [HttpPost]
        public ActionResult EditA(FullPTB a)
        {
            var dao1 = new ProposalToBuyDao();
            var dao2 = new DetailPTBDao();
            var ngtao = new ProposalToBuyDao().ViewDetail(a.item.ID).CreateBy;
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var checkduyetmua1 = new PermissionDao().CheckUser("ApprovalBuy", session.UserName);
            var checkduyetmua2 = new PermissionDao().CheckUser("AuthApprovePur", session.UserName);
            var checkeditcost = new PermissionDao().CheckUser("EditCostinPTB", session.UserName);
            var checkTBP = new UserDao().GetHODUser(session.UserName, ngtao);

            bool res = false;
            var stt = 1;
            //Duyệt Mua và Duyệt Giá
            if (session.Level == "Giám Đốc" || checkduyetmua1 == true || checkduyetmua2 == true)
            {
                res = dao1.BOSSUpdate(a.item, session.UserName);
                if (a.item.BOSSApproval1 == true && a.item.BOSSApproval == false)
                {
                    var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                    var mail = new SendEmail();                   
                }
            }
            // Mua hàng duyệt
            if (session.DeID == 12)
            {
                res = dao1.PDUpdate(a.item, session.UserName);
                var temp = a.detail;
                dao2.Delete(a.item.ID);
                foreach (var d in temp)
                {
                    if (d.ItemID != null && d.ItemID != "" && d.MaterialName != null && d.MaterialName != "")
                    {
                        d.ID = a.item.ID;
                        d.No = stt;
                        dao2.Insert(d);
                        stt++;
                    }

                }
                if (a.item.PDApproval == true && a.item.HODApproval == true && a.item.BOSSApproval1 == true)
                {
                    var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                    var mail = new SendEmail();

                    mail.Send("cuong.tong", "system@pte.vn", "cuong.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " -  Bộ Phận Mua Hàng vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                }
            }
            // Trưởng Phòng duyệt
            if (session.Level == "Trưởng Phòng")
            {
                var BossPer = new UserDao().ViewDetail(session.UserName).BossPer;
                if (checkTBP)
                { res = dao1.HODUpdate(a.item, session.UserName); }
                if (BossPer != null)
                {
                    if (BossPer == "cuong.tong")
                    {
                        if (a.item.HODApproval == true && a.item.BOSSApproval1 == false)
                        {
                            var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                            var mail = new SendEmail();
                            mail.Send("cuong.tong", "system@pte.vn", "cuong.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " - Trưởng Bộ Phận " + userT.DepartmentName + " vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                        }
                    }
                    else
                    {
                        if (a.item.HODApproval == true && a.item.BGDApproval == false)
                        {
                            var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                            var userB = new UserDao().GetInfoSendMailUser(BossPer);
                            var mail = new SendEmail();
                            mail.Send(BossPer, "system@pte.vn", userB.Email, "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " - Trưởng Bộ Phận " + userT.DepartmentName + " vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn/ProposalToBuy/Edit2/" + a.item.ID + " để xem xét");
                        }
                    }
                }

            }
            //PGD duyệt

            if (session.Level == "PGD")
            {
                if (new UserDao().MyTBPorBGD(session.UserName, ngtao))
                { res = dao1.BGDUpdate(a.item, session.UserName); }
                if (a.item.BGDApproval == true && a.item.BOSSApproval1 == false)
                {
                    var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                    var mail = new SendEmail();

                    mail.Send("cuong.tong", "system@pte.vn", "cuong.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " - Quản Lý Bộ Phận " + userT.DepartmentName + " vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                }
            }
            // chinh sua cac thong tin con lai
            if (session.Level != "Giám Đốc")
            {
                res = dao1.StaffUpdate(a.item, session.UserName);
                if (a.item.BGDApproval == true || a.item.HODApproval == true || a.item.BOSSApproval == true || a.item.BOSSApproval1 == true)
                { 
                    
                    
                
                }
                else
                {
                    var temp = a.detail;
                    dao2.Delete(a.item.ID);
                    foreach (var d in temp)
                    {
                        if (d.ItemID != null && d.ItemID != "" && d.MaterialName != null && d.MaterialName != "")
                        {
                            d.ID = a.item.ID;
                            d.No = stt;
                            dao2.Insert(d);
                            stt++;
                        }

                    }
                }
            }
            // Update thong tin Cost

            if (a.item.CreateBy == session.UserName || checkeditcost == true || checkTBP == true)
            {
                foreach (var d in a.detail)
                {
                    dao2.UpdateCost(a.item.ID, d.No, d.LinkType1, d.ID01, d.ID02);
                }
            }
        

            return Redirect(Session["CurrentLink"].ToString());
        }
        [HttpPost]
        public ActionResult Edit1(FullPTB a)
        {
            var dao1 = new ProposalToBuyDao();
            var dao2 = new DetailPTBDao();
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];

            bool res = false;
            var stt = 1;
            if (session.Level == "Giám Đốc")
            {
                res = dao1.BOSSUpdate(a.item, session.UserName);
                if (a.item.BOSSApproval1 == true && a.item.BOSSApproval == false)
                {
                    var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                    var mail = new SendEmail();
                    //mail.Send("system@pte.vn", "tien.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi Bộ Phận Mua Hàng Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " -  Bộ Phận Giám Đốc vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                    //mail.Send("system@pte.vn", "linh.duong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi Bộ Phận Mua Hàng Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " -  Bộ Phận Giám Đốc vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                }
            }
            if (session.DeID == 12)
            {
                res = dao1.PDUpdate(a.item, session.UserName);
                if (a.item.PDApproval == true && a.item.HODApproval == true && a.item.BOSSApproval1 == true)
                {
                    var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                    var mail = new SendEmail();

                    mail.Send("cuong.tong", "system@pte.vn", "cuong.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " -  Bộ Phận Mua Hàng vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                }
            }

            if (session.Level == "Trưởng Phòng")
            {
                var ngtao = new ProposalToBuyDao().ViewDetail(a.item.ID).CreateBy;
                var userTP = new UserDao().GetHODUser(ngtao);
                if (session.UserName == userTP.UserName)
                { res = dao1.HODUpdate(a.item, session.UserName); }
                if (a.item.HODApproval == true && a.item.BOSSApproval1 == false)
                {
                    var userT = new UserDao().GetInfoSendMailUser(session.UserName);
                    var mail = new SendEmail();

                    mail.Send("cuong.tong", "system@pte.vn", "cuong.tong@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi BGĐ Công Ty Hiệp Phước Thành. anh / chị  " + userT.FullName + " - Trưởng Bộ Phận " + userT.DepartmentName + " vừa đồng ý duyệt yêu cầu mua vật tư với lý do (" + a.item.Reason + ") , vào lúc :" + a.item.CreateDate + " .Vui lòng truy cập vào http://system.pte.vn để xem xét");
                }
            }
            if (session.Level != "Giám Đốc")
            {
                res = dao1.StaffUpdate(a.item, session.UserName );
                var temp = a.detail;
                dao2.Delete(a.item.ID);
                foreach (var d in temp)
                {

                    if (d.MaterialName != null)
                    {
                        d.ID = a.item.ID;
                        d.No = stt;
                        dao2.Insert(d);
                        stt++;
                    }
                }
            }

            if (res)
            {
                return Redirect(Session["CurrentLink"].ToString());
            }
            else
            {
                ModelState.AddModelError("", "Cập nhật danh mục bài viết không thành công");
            }

            return Redirect(Session["CurrentLink"].ToString());
        }
        public JsonResult ChangeStatusBought(long id, int no)
        {
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var detail = new DetailPTBDao();
            if (session.DeID == 12 || session.Level == "Quản Trị")
            {
                if (detail.CheckStatusBought(id, no) == true && session.Level == "Mua Hàng")
                { return null; }
                else
                {
                    var result = detail.ChangeStatusBought(id, no);
                    try
                    {

                        var userT = new UserDao().GetInfoSendMailUser(detail.GetUserandMaterial(id, no).CreateBy);
                        var mail = new SendEmail();
                        //mail.Send("system@pte.vn", "hung.dang@pte.vn", "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi anh / chị  -  Bộ Phận Mua Hàng vừa đặt mua Vật tư :" + detail.GetUserandMaterial(id, no).MaterialName + " do "+userT.FullName+" thuộc bộ phận"+userT.DepartmentName+" yêu cầu. Nếu chưa nhận được thì liên hệ với Kho gấp! ");

                    }
                    catch { }

                    return Json(new
                    {
                        status = result
                    });
                }
            }
            else { return null; }
        }
        public JsonResult ChangeStatusRecive(long id, int no)
        {
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var dao = new ProposalToBuyDao();
            var userN = dao.ViewDetail(id).CreateBy;
            var detail = new DetailPTBDao();
            if (session.Level == "Thủ Kho" || session.Level == "Quản Trị")
            {
                if (detail.CheckStatusRecive(id, no) == true && session.Level == "Thủ Kho")
                { return null; }
                else
                {
                    var result = detail.ChangeStatusRecived(id, no);
                    try
                    {

                        var userT = new UserDao().GetInfoSendMailUser(detail.GetUserandMaterial(id, no).CreateBy);
                        var mail = new SendEmail();
                        mail.Send(userN,"system@pte.vn", userT.Email, "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi anh / chị  " + userT.FullName + " -  Bộ Phận " + userT.DepartmentName + ". Anh chị vừa nhận Vật tư :" + detail.GetUserandMaterial(id, no).MaterialName + " tại kho. Nếu chưa nhận được thì liên hệ với Kho gấp! ");

                    }
                    catch { }
                    return Json(new
                    {
                        status = result
                    });
                   

                }
            }
            else { return null; }
        }
        public JsonResult ChangeStatusImport(long id, int no)
        {
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var dao = new ProposalToBuyDao();
            var userN = dao.ViewDetail(id).CreateBy;
            var detail = new DetailPTBDao();
            if (session.Level == "Thủ Kho" || session.Level == "Quản Trị")
            {
                if (detail.CheckStatusImport(id, no) == true && session.Level == "Thủ Kho")
                { return null; }
                else
                {
                    var result = detail.ChangeStatusImported(id, no);
                    try
                    {

                        var userT = new UserDao().GetInfoSendMailUser(detail.GetUserandMaterial(id, no).CreateBy);
                        var mail = new SendEmail();
                        mail.Send(userN,"system@pte.vn", userT.Email, "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi anh / chị  " + userT.FullName + " -  Bộ Phận " + userT.DepartmentName + ". Vật tư :" + detail.GetUserandMaterial(id, no).MaterialName + "Vừa được nhập kho. Vui lòng qua kho nhận vật tư và truy cập vào http://system.pte.vn để xác nhận");

                    }
                    catch { }
                    return Json(new
                    {
                        status = result
                    });
                }
            }
            else { return null; }
        }
        public JsonResult AddImportDate(long id, int no, string ngaynhap)
        {
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var detail = new DetailPTBDao();
            if (session.Level == "Thủ Kho" || session.Level == "Quản Trị")
            {
                if (detail.CheckStatusImport(id, no) == true && session.Level == "Thủ Kho")
                { return null; }
                else
                {
                    var result = detail.ChangeStatusImported(id, no, Convert.ToDateTime(ngaynhap));
                    try
                    {

                        var userT = new UserDao().GetInfoSendMailUser(detail.GetUserandMaterial(id, no).CreateBy);
                        var mail = new SendEmail();
                        //mail.Send("system@pte.vn", userT.Email, "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Kính Gửi anh / chị  " + userT.FullName + " -  Bộ Phận " + userT.DepartmentName + ". Vật tư :" + detail.GetUserandMaterial(id, no).MaterialName + "Vừa được nhập kho. Vui lòng qua kho nhận vật tư và truy cập vào http://system.pte.vn để xác nhận");

                    }
                    catch { }
                    return Json(new
                    {
                        status = result
                    });
                }
            }
            else { return null; }
        }

        public JsonResult FindNameVT2(string name)
        {
            IEnumerable<Model.EF3.SI_Items> model = new SI_ItemsDao().SearchName(name);
            return Json(new
            {
                status = new JavaScriptSerializer().Serialize(model)
            });

        }
        public JsonResult FindNameVT(string name)
        {
            List<Model.View.Dropdownlist6> model= new SI_ItemsDao().SearchName2(name);
            List<Model.View.Dropdownlist6> model2 = new ProductDao().SearchName2(name);
            foreach(var item in model2)
            { model.Add(item); }
            return Json(new
            {
                status = new JavaScriptSerializer().Serialize(model)
            });

        }
        public JsonResult FindNameVTFAST(string name)
        {
            IEnumerable<Model.EFFASTKHO.dmvt> model = new dmvtDao().SearchName(name);
            return Json(new
            {
                status = new JavaScriptSerializer().Serialize(model)
            });

        }
        public JsonResult FindNameVD(string name)
        {
            IEnumerable<Model.View.Vendor2> model = new VendorDao().SearchName(name);
            return Json(new
            {
                status = new JavaScriptSerializer().Serialize(model)
            });

        }
        public JsonResult FindVendor(string name)
        {
            IEnumerable<Model.View.Vendor3> model = new ItemPriceDao().FindVendor(name);
            return Json(new
            {
                status = new JavaScriptSerializer().Serialize(model)
            });

        }

        [HttpDelete]
        public ActionResult Delete(long id)
        {
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var name = session.UserName;
            var nguoitao = new ProposalToBuyDao().ViewDetail(id).CreateBy;
            if (name == nguoitao)
            {
                new DetailPTBDao().Delete(id);
                new ProposalToBuyDao().Delete(id);
            }
            return Redirect(Session["CurrentLink"].ToString());
        }
        private bool XoaPhieu(long id)
        {
            try {
                new DetailPTBDao().Delete(id);
                new ProposalToBuyDao().Delete(id);
                return true;
            }
            catch { return false; }
                
        }

         [HttpPost]
        public ActionResult SendMessage(long id , string lydo)
        {
            var session = (UserLogin)Session[CommonConstants.USER_SESSION];
            var nguoitao = new ProposalToBuyDao().ViewDetail(id).CreateBy;
            if (nguoitao == session.UserName)
            {
                bool kq = new ProposalToBuyDao().ChangeStatus(id);
                new ProposalToBuyDao().HistoryUpdate(id, session.UserName + " change status " + DateTime.Now);
                //if (kq)
                //{
                //    var userT = new UserDao().GetInfoSendMailUser(nguoitao);
                //    var mail = new SendEmail();
                //    mail.Send("system@pte.vn", userT.Email, "[SYSTEM PTE] PHIEU DE NGHI MUA VAT TU", "Gửi anh/chị Phiếu Yêu Cầu Mua Vật Tư số (" + id + ") đã được xóa bởi " + session.UserName + ", với lý do: " + lydo);
                //}           
            }
            return RedirectToAction("Index");

        }

         public ActionResult ListforPO(string searchString, int page = 1, int pageSize = 40)
         {
             Session["CurrentLink"] = HttpContext.Request.Url.AbsoluteUri;
             var dao = new DetailPTBDao();
             var session = (UserLogin)Session[CommonConstants.USER_SESSION];
             IEnumerable<ProposalToBuyView4> model = null;
             model = dao.ViewListPO1(searchString, page, pageSize);
             ViewBag.SearchString = searchString;
             return View(model);
         }


    }
}
