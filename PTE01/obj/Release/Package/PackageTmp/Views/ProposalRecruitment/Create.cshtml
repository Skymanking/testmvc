@model Model.EF.ProposalRecruitment
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Theme3.cshtml";

    List<SelectListItem> trinhdo = new List<SelectListItem>();
    trinhdo.Add(new SelectListItem
    {
        Text = "Phổ thông",
        Value = "Phổ thông",
        Selected = true
    });
    trinhdo.Add(new SelectListItem
    {
        Text = "Trung Cấp",
        Value = "Trung Cấp",
    });
    trinhdo.Add(new SelectListItem
    {
        Text = "Cao Đẳng",
        Value = "Cao Đẳng",
    });
    trinhdo.Add(new SelectListItem
    {
        Text = "Đại Học",
        Value = "Đại Học",
    });
    trinhdo.Add(new SelectListItem
    {
        Text = "Thạc Sĩ",
        Value = "Thạc Sĩ",
    });

    List<SelectListItem> kinhnghiem = new List<SelectListItem>();
    kinhnghiem.Add(new SelectListItem
         {
             Text = "Không yêu cầu",
             Value = "Không yêu cầu",
             Selected = true
         });
    kinhnghiem.Add(new SelectListItem
         {
             Text = "1 - 2 năm",
             Value = "1 - 2 năm",
         });
    kinhnghiem.Add(new SelectListItem
    {
        Text = "3 - 5 năm",
        Value = "3 - 5 năm",
    });
    kinhnghiem.Add(new SelectListItem
    {
        Text = "trên 5 năm",
        Value = "trên 5 năm",
    });
    //List<SelectListItem> dotuoi = new List<SelectListItem>();
    //dotuoi.Add(new SelectListItem
    //     {
    //         Text = "Không quan trọng",
    //         Value = "Không quan trọng",
    //         Selected = true
    //     });
    //dotuoi.Add(new SelectListItem
    //     {
    //         Text = "18-20 tuổi",
    //         Value = "18-20 tuổi",
    //     });
    //dotuoi.Add(new SelectListItem
    //{
    //    Text = "20-25 tuổi",
    //    Value = "20-25 tuổi",
    //});
    //dotuoi.Add(new SelectListItem
    //{
    //    Text = "25-30 tuổi",
    //    Value = "25-30 tuổi",
    //});
    //dotuoi.Add(new SelectListItem
    //{
    //    Text = "trên 30 tuổi",
    //    Value = "trên 30 tuổi",
    //});
    List<SelectListItem> loainv = new List<SelectListItem>();
    loainv.Add(new SelectListItem
         {
             Text = "Lao động phổ thông < 15 ngày",
             Value = "15",
             Selected = true
         });
    loainv.Add(new SelectListItem
         {
             Text = "NV văn phòng, gián tiếp, bảo vệ < 30 ngày",
             Value = "30",
         });
    loainv.Add(new SelectListItem
    {
        Text = "Công nhân kỹ thuật có tay nghề < 35 ngày",
        Value = "35",
    });
    loainv.Add(new SelectListItem
    {
        Text = "Quản lý cấp trung < 45 ngày",
        Value = "45",
    });
    loainv.Add(new SelectListItem
         {
             Text = "Quản lý cấp cao < 60 ngày",
             Value = "60",
         });
    loainv.Add(new SelectListItem
    {
        Text = "Cấp lãnh đạo < 90 ngày",
        Value = "90",
    });
}

<div class="card card-primary">
    <div class="card-header">
        <h3 class="card-title">Yêu Cầu Tuyển Dụng</h3>
    </div>
    @using (Html.BeginForm("Create", "ProposalRecruitment", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card-body">
            <div class="row">

                        <div class='col-md-8'>
                            <label class="control-label">Lý Do</label>
                            @Html.TextBoxFor(model => model.Reason, new { @class = "form-control", @placeholder = "lý do tuyển dụng" })
                            @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                        </div>
                    
                        <div class='col-md-4'>
                            <label class="control-label">Chức vụ / Vị trí</label>
                            @Html.TextBoxFor(model => model.Position, new { @class = "form-control", @placeholder = "chức vụ cần tuyển" })
                            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                        </div>
                        <div class='col-md-2'>
                            <label class="control-label">Số lượng cần tuyển</label>
                            @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", @type = "number" })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>

                        <div class='col-md-4'>
                            <label class="control-label">Loại Nhân Viên</label>
                            @Html.DropDownListFor(model => model.TypeJob, loainv, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TypeJob, "", new { @class = "text-danger" })
                        </div>
                        <div class='col-md-2'>
                            <label class="control-label">Trình Độ</label>
                            @Html.DropDownListFor(model => model.AcademicLevel, trinhdo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AcademicLevel, "", new { @class = "text-danger" })
                        </div>
                        <div class='col-md-4'>
                            <label class="control-label">Kinh Nghiệm</label>
                            @Html.DropDownListFor(model => model.Experience, kinhnghiem, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                        </div>
                       
                       
                        <div class='col-md-12'>
                            <label class="control-label">Những yêu cầu khác</label>
                            @Html.TextAreaFor(model => model.Other, new { @class = "form-control", @rows = "10", @placeholder = "không được thể hiện các nội dung phân biệt đối xử như: giới tính, độ tuổi, dân tộc…." })
                            @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
                        </div>
                      
                    </div>
                </div>

        <div class="card-footer">
            <button type="submit" class="btn btn-primary" onclick="openNav()">Lưu thông tin</button>  

        </div>
    }
</div>






